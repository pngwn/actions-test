name: "deploy website"

on:
  workflow_call:
    inputs:
      branch_name:
        description: "The branch name"
        type: string
      pr_number:
        description: "The PR number"
        type: number
    secrets:
      vercel_token:
        description: "Vercel API token"
      gh_token:
        description: "Github token"
        required: true

jobs:
  comment-pr-start:
    uses: "./.github/workflows/comment-queue.yml"
    secrets:
      gh_token: ${{ secrets.gh_token }}
    with:
      pr_number: ${{ inputs.pr_number }}
      message: notebooks~pending~null
  deploy:
    name: "Deploy website"
    runs-on: ubuntu-latest
    outputs:
      vercel_url: ${{ steps.output_url.outputs.vercel_url }}
    steps:
      - name: output url
        id: output_url
        run: echo "vercel_url=https://some-url.com/path" >> $GITHUB_OUTPUT

      # - name: Install Vercel CLI
      #   shell: bash
      #   run: pnpm install --global vercel@latest
      # # preview
      # - name: Pull Vercel Environment Information
      #   shell: bash
      #   if: github.event_name == 'pull_request'
      #   run: vercel pull --yes --environment=preview --token=${{ inputs.vercel_token }}
      # - name: Build Project Artifacts
      #   if: github.event_name == 'pull_request'
      #   shell: bash
      #   run: vercel build --token=${{ inputs.vercel_token }}
      # - name: Deploy Project Artifacts to Vercel
      #   if: github.event_name == 'pull_request'
      #   shell: bash
      #   run: echo "VERCEL_URL=$(vercel deploy --prebuilt --token=${{ inputs.vercel_token }})" >> $GITHUB_ENV
      # # production
      # - name: Pull Vercel Environment Information
      #   if: github.event_name == 'push' && inputs.branch_name == 'main'
      #   shell: bash
      #   run: vercel pull --yes --environment=production --token=${{ inputs.vercel_token }}
      # - name: Build Project Artifacts
      #   if: github.event_name == 'push' && inputs.branch_name == 'main'
      #   shell: bash
      #   run: vercel build --prod --token=${{ inputs.vercel_token }}
      # - name: Deploy Project Artifacts to Vercel
      #   if: github.event_name == 'push' && inputs.branch_name == 'main'
      #   shell: bash
      #   run: echo "deploying production"
      #   # run: echo "VERCEL_URL=$(vercel deploy --prebuilt --prod --token=${{ inputs.vercel_token }})" >> $GITHUB_ENV
      # - name: echo vercel url
      #   shell: bash
      #   run: echo $VERCEL_URL #add to comment

  comment-pr-end:
    uses: "./.github/workflows/comment-queue.yml"
    needs: [deploy]
    secrets:
      gh_token: ${{ secrets.gh_token }}
    with:
      pr_number: ${{ github.event.pull_request.number }}
      message: notebooks~failure~${{needs.deploy.outputs.vercel_url}}
